name: build

on:
  push:
    branches: [ main ]
    tags: ['*']
  pull_request:
    branches: [ main ]
  release:
    types:
      - published

env:
  PYTEST_ADDOPTS: "--color=yes"

jobs:
  tests:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 5
      matrix:
        python-version: ["3.10", "3.11", "3.12", "3.13"]

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Install uv
      uses: astral-sh/setup-uv@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Set up Python ${{ matrix.python-version }}
      run: uv python install

    - name: Install the project
      run: uv sync --all-extras --dev

    - name: Verify Python environment
      run: |
        uv pip list

    - name: Run tests
      run: uv run nox --default-venv-backend uv --session tests-cov -- -v

  deploy:
    needs: [tests]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"

    - name: Install dependencies
      run: python -m pip install --upgrade pip nox

    - name: Package
      run: nox --session release-build

    - name: Publish package
      if: |
        (
          ( github.event_name == 'release' && github.event.action == 'published' ) ||
          ( github.event_name == 'push' && startsWith(github.ref, 'refs/tags') )
        )
      env:
        TEST_PYPI_TOKEN: ${{ secrets.TEST_PYPI_TOKEN }}
      run: nox --session release-upload -- --repository testpypi
